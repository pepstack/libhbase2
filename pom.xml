<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.pepstack</groupId>
  <artifactId>libhbase2</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>HBase Native Library</name>
  <url>https://pepstack.com/libhbase2/</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <repositories>
    <!-- https://mvnrepository.com/ -->
    <repository>
      <id>mvnrepository central</id>
      <name>mvnrepository.com</name>
      <url>https://mvnrepository.com/artifact/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <gtest.version>1.7.0</gtest.version>
    <gtest.md5>2d6ec8ccdf5c46b05ba54a9fd1d130d7</gtest.md5>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>maven-download-plugin</artifactId>
        <version>1.1.0</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>1.0-alpha-9</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>generate-jni-headers</id>
            <phase>compile</phase>
            <goals>
              <goal>javah</goal>
            </goals>
            <configuration>
              <javahClassNames>
                <javahClassName>org.apache.hadoop.hbase.jni.CallbackHandlers</javahClassName>
              </javahClassNames>
              <javahOutputDirectory>${project.build.directory}/native/javah</javahOutputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <!--$NO-MVN-MAN-VER$ -->
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <tarLongFileMode>gnu</tarLongFileMode>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/assembly/all.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>build-tarball</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version><!--$NO-MVN-MAN-VER$-->
        <executions>
          <execution>
            <id>build-libhbase-binaries</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <target>
                <echo message="Building libhbase2..."/>
                <exec executable="bash" failonerror="true" dir="${basedir}">
                  <arg value="gradlew" />
                  <arg value="hbase2" />
                  <arg value="perftest" />
                  <arg value="-PbuildDir=${project.build.directory}/gradle" />
                  <arg value="-PjniIncludeDir=${project.build.directory}/native/javah" />
                </exec>
              </target>
            </configuration>
          </execution>

          <execution>
            <id>build-libhbase-tests</id>
            <phase>test-compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <skip>${maven.test.skip}</skip>
              <target unless="skipTests">
                <echo message="Building GTest..."/>
                <exec executable="cmake" failonerror="true"
                      dir="${project.build.directory}/gtest-${gtest.version}">
                  <arg value="-DBUILD_SHARED_LIBS=ON"/>
                  <arg value="-GUnix Makefiles"/>
                  <arg value="."/>
                </exec>
                <exec executable="make" failonerror="true"
                      dir="${project.build.directory}/gtest-${gtest.version}">
                  <arg value="gtest"/>
                </exec>
                <echo message="Building libHBase unit tests..."/>
                <exec executable="bash" failonerror="true" dir="${basedir}">
                  <arg value="gradlew" />
                  <arg value="unittests" />
                  <arg value="-PbuildDir=${project.build.directory}/gradle" />
                  <arg value="-PgoogleTestDir=${project.build.directory}/gtest-${gtest.version}" />
                </exec>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>run-libhbase-unittests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <skip>${maven.test.skip}</skip>
              <target unless="skipTests">
                <echo message="Running libHBase unit tests..."/>
                <exec executable="${project.build.directory}/gradle/binaries/unittestsExecutable/unittests"
                      failonerror="true" dir="${basedir}">
                  <env key="PATH" path="${env.PATH}:${java.home}/bin/server:${project.build.directory}/gtest-${gtest.version}:${project.build.directory}/${project.build.finalName}/lib/native"/>
                  <env key="LD_LIBRARY_PATH" path="${env.LD_LIBRARY_PATH}:${java.home}/lib/${os.arch}/server:${project.build.directory}/gtest-${gtest.version}:${project.build.directory}/${project.build.finalName}/lib/native"/>
                  <env key="HBASE_CONF_DIR" file="${project.build.directory}/${project.build.finalName}/conf"/>
                  <env key="HBASE_LIB_DIR" file="${project.build.directory}/${project.build.finalName}/lib"/>
                  <env key="LIBHBASE_OPTS" value="-Dlibhbase.log.dir=${project.build.directory}/test-logs -Dlibhbase.log.name=unittests_java.log -Dlibhbase.logger=RFA -Dlibhbase.log.level=info"/>
                </exec>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <versionRange>[1.0-alpha-9,)</versionRange>
                    <goals>
                      <goal>javah</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      com.googlecode.maven-download-plugin
                    </groupId>
                    <artifactId>maven-download-plugin</artifactId>
                    <versionRange>[1.1.0,)</versionRange>
                    <goals>
                      <goal>wget</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>org.hbase</groupId>
      <artifactId>asynchbase</artifactId>
      <version>1.8.2</version>
      <exclusions>
        <exclusion>
          <artifactId>log4j-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>3.4.5</version>
      <exclusions>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jline</artifactId>
          <groupId>jline</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>netty</artifactId>
          <groupId>org.jboss.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--test dependencies -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>hbase2</id>
      <activation>
        <property>
          <name>!hbase.profile</name>
        </property>
      </activation>
      <properties>
        <hbase.jar.version>2.1.2</hbase.jar.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-client</artifactId>
          <version>${hbase.jar.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>hadoop2</id>
      <activation>
        <property>
          <name>!hadoop.profile</name>
        </property>
      </activation>
      <properties>
        <hadoop.jar.version>2.9.2</hadoop.jar.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
          <version>${hadoop.jar.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>